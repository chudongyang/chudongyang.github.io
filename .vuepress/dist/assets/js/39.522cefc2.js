(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{686:function(t,s,a){"use strict";a.r(s);var n=a(49),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"什么是库？什么是框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是库？什么是框架"}},[t._v("#")]),t._v(" 什么是库？什么是框架")]),t._v(" "),a("ul",[a("li",[t._v("库：以 JQuery 为例，其拥有很多的方法，组成了一个完整的功能。通过这些方法实现我们自己的功能（主动，我们手动调用库中的方法）")]),t._v(" "),a("li",[t._v("框架：以 Vue 为例，我们只需要将特定的代码放到特定的位置上，框架就会帮我们调用（被动）")])]),t._v(" "),a("h3",{attrs:{id:"mvc-和-mvvm-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvc-和-mvvm-的区别"}},[t._v("#")]),t._v(" MVC 和 MVVM 的区别")]),t._v(" "),a("ul",[a("li",[t._v("MVC\n"),a("ul",[a("li",[t._v("传统的 MCV 指的是后端开发，model（数据库中的额数据）、view（前端页面）、controller（后端的控制器）")])])]),t._v(" "),a("li",[t._v("MVVM\n"),a("ul",[a("li",[t._v("model（js中的数据）、viewModel（视图模型）、view（前端的页面）")]),t._v(" "),a("li",[t._v("双向绑定，不需要用户手动的操作 DOM 的")])])])]),t._v(" "),a("h3",{attrs:{id:"vue2-0-响应式的规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue2-0-响应式的规则"}},[t._v("#")]),t._v(" Vue2.0 响应式的规则")]),t._v(" "),a("ul",[a("li",[t._v("会递归的去循环 vue 中的属性（这也是浪费性能的地方），会给每个属性都增加 getter 和 setter 属性，当属性变化时更新视图")]),t._v(" "),a("li",[t._v("重写了数组中的方法，当调用数组方法时会触发更新，也对数组中的每一项进行了监控")]),t._v(" "),a("li",[t._v("对象只监控了默认自带的属性，新增的属性是不生效的")]),t._v(" "),a("li",[t._v("数组的索引发生变化或者数组的长度发生变化，不会触发更新")]),t._v(" "),a("li",[t._v("vm.$set() 方法可以强制更新，内部采用的就是数组的 splice 方法")]),t._v(" "),a("li",[t._v("这些 vue2.0 的缺陷，在 vue3.0 中通过 proxy 实现响应式解决了")])]),t._v(" "),a("h3",{attrs:{id:"proxy-实现响应式原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proxy-实现响应式原理"}},[t._v("#")]),t._v(" proxy 实现响应式原理")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Proxy")]),t._v(" 是 es6 新增的 api， 兼容性不是很好")]),t._v(" "),a("li",[t._v("new Proxy(target, handler)) 返回一个 proxy 实例，target 是要代理的对象，handler 是配置对象，共有13种拦截操作")]),t._v(" "),a("li",[a("code",[t._v("Reflect")]),t._v(" 将 Object 的一些明显属于语言内部的方法，放在了 Reflect 上， Reflect对象一共有 13 个静态方法。 大部分与 Object 对象的同名方法的作用都是相同的，而且它与 "),a("code",[t._v("Proxy")]),t._v(" 对象的方法是一一对应的")]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("proxy")]),t._v(" 简版的实现响应式原理")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" handler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'收集依赖'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 递归收集依赖")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("oldValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 新增值")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'新增操作'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新值")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'更新操作'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" proxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"vue-指令相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-指令相关"}},[t._v("#")]),t._v(" vue 指令相关")]),t._v(" "),a("ul",[a("li",[t._v("v-html 最好采用可信任的内容，不要将用户输入的内容进行回显。目的是为了 xss 攻击（获取用户的cookie）")]),t._v(" "),a("li",[t._v("v-if 控制的是 DOM 元素是否存在，v-show 控制的是 DOM 元素的显示和隐藏；v-show 不能使用在 template 标签上，v-if 可以阻止后续逻辑的发生")]),t._v(" "),a("li",[t._v("v-for 和 v-if 不要使用在同一个元素上，可能会导致性能浪费")]),t._v(" "),a("li",[t._v("如果在 template 标签上进行 v-for 循环，必须将 key 放到真实的元素上")]),t._v(" "),a("li",[t._v("v-model 就是 :value 和 @input 的语法糖")])]),t._v(" "),a("h3",{attrs:{id:"过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过滤器"}},[t._v("#")]),t._v(" 过滤器")]),t._v(" "),a("ul",[a("li",[t._v("过滤器是将原数据进行格式化显示，并且不改变原数据")]),t._v(" "),a("li",[t._v("全局过滤器和局部过滤器")]),t._v(" "),a("li",[t._v("定义一个"),a("code",[t._v("format")]),t._v("格式化时间过滤器, 用法 "+t._s(t._f("format")(t.time,"YYYY:MM:DD hh:mm:ss")))])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// time 是管道符前面变量数据，formatter 是 format 调用时传入的参数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// moment 是一个日期处理类库")]),t._v("\nVue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'format'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" formatter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("moment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("formatter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[t._v("#")]),t._v(" 指令")]),t._v(" "),a("ul",[a("li",[t._v("自定义指令的钩子函数\n"),a("ul",[a("li",[t._v("bind: 只调用一次，指令第一次绑定到元素时调用")]),t._v(" "),a("li",[t._v("inserted: 被绑定元素插入父节点时调用")]),t._v(" "),a("li",[t._v("update: 所在组件的 VNode 更新时调用")]),t._v(" "),a("li",[t._v("componentUpdated: 指令所在组件的 VNode 及其子 VNode 全部更新后调用")]),t._v(" "),a("li",[t._v("unbind: 只调用一次，指令与元素解绑时调用")])])]),t._v(" "),a("li",[t._v("钩子函数的参数 el、binding、vonode 和 oldVnode\n"),a("ul",[a("li",[t._v("el: 指令绑定的元素，用来操作 DOM")]),t._v(" "),a("li",[t._v("binding: 包含 name(指令名)、value(指令绑定的值)、oldVnode(指令绑定的前一个值)、expression(字符串形式的指令表达式) 等等组成的对象")]),t._v(" "),a("li",[t._v("vnode: Vue 编译生成的虚拟节点, "),a("code",[t._v("vnode.context")]),t._v(" 可以获取当前组件的实例")]),t._v(" "),a("li",[t._v("oldVnode: 上一个虚拟节点")])])]),t._v(" "),a("li",[t._v("定义页面刷新后输入框自动获取焦点指令 v-focus")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Vue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("directive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'focus'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("inserted")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" binding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("focus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("定义一个类似日期选择器的指令")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Vue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("directive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'clickOutside'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" binding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断点击的元素是否包含在指令应用的元素中")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" method "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" binding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expression\n        vnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),a("ul",[a("li",[t._v("beforeCreate: 创建前，没有进行数据观测，只是调用了初始化父子关系及内部的事件")]),t._v(" "),a("li",[t._v("created: 创建后，只是初始化了数据，不能获取真实的 DOM 元素")]),t._v(" "),a("li",[t._v("beforeMount: 挂载前，在第一次调用 render 函数之前执行, 此时 $el 有值，但是没有挂载到页面上")]),t._v(" "),a("li",[t._v("render: 渲染函数，template 模板会被替换成 render 函数，")]),t._v(" "),a("li",[t._v("mounted: 挂载后，创建真实的 DOM 元素，替换掉老的节点")]),t._v(" "),a("li",[t._v("beforeUpdate: 更新前，可以做一些合并更新的操作")]),t._v(" "),a("li",[t._v("updated: 更新后， 此函数里不能在更新数据了，会发生死循环")]),t._v(" "),a("li",[t._v("beforeDestroy: 销毁前， 此函数可以做自定义事件的解绑，可取消 DOM 事件的绑定，清除定时器等等")]),t._v(" "),a("li",[t._v("destroyed: 销毁后")]),t._v(" "),a("li",[t._v("父组件套子组件，生命周期的执行顺序：父组件的 (beforeCreate、created、beforeMount、render) 一次执行后，渲染子组件的（beforeCreate、created、beforeMount、mounted），最后渲染父组件的 mounted")])]),t._v(" "),a("blockquote",[a("p",[t._v("生命周期是同步执行的，所以 AJAX 异步请求一定是在 mounted 之后才会执行；服务端渲染 vue， 不支持 mounted， 在服务端没有 DOM 的概念")])])])}),[],!1,null,null,null);s.default=e.exports}}]);